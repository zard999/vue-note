/**
 * 1. home主页面中的组件
 *      主要的目的是为了了解组件之间的关系
 *          嵌套关系还是路由跳转之后平级的关系
 *
 * 2. 设置路由
 *      router/index.js   路由规则
 *      基本使用步骤 和vm关联起来
 *      meta 路由规则当中使用了此属性 用来存储其他数据和其他路由规则 有所差异
 *          当访问一个对象中不存在的属性时，不会报错，值的undefined
 *          有路由元的规则，可以直接访问meta中的数据，然后判断
 * 3. Vuex
 *      基本使用步骤
 *          如果项目比较大，业务比较复杂，数据流也比较大，此时可以使用模块化的方式，就是一个模块也有state，actions，mutations，getters 开启命名空间
 *          无论有几个模块，一定要和store关联起来
 *          一个大项目中只有一个store实例对象
 *
 *          启用了模块化之后，数据的使用或是actions中方法的派发，要加上模块名
 *              ...mapState('home', ['categoryList'])
 *
 *          在对应的组件中dispatch的时候，要加上模块名称
 *          this.$store.dispatch('home/reqCategoryListData')
 * 4. 二次封装axios
 *      原来的时候是直接发生请求 axios.get() axios({})
 *      现在是大型项目，需要做比较多和设置，比如进度条
 *      先创建axios的实例
 *      再去进行相关的设置      拦截器   请求拦截器     响应拦截器
 * 
 * 5. 统一管理ajax发生请求的方式
 *      将发生请求的操作 统一放在一个单独文件当中
 *      优点：为了将来更方便的升级或是维护
 */
